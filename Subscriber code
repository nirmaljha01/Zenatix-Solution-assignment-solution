# subscriber.py

import paho.mqtt.client as mqtt
import json
import time
from datetime import datetime

# MQTT Configuration
MQTT_BROKER = "mqtt.eclipse.org"
MQTT_PORT = 1883
MQTT_TOPIC = "hotel/temperature"
THRESHOLD = 25.0  # Temperature threshold to trigger alarm
ALARM_DURATION = 5  # Number of consecutive data points to check

# List to store recent temperature data
temperature_data = []

def on_connect(client, userdata, flags, rc):
    print(f"Connected to MQTT Broker with result code {rc}")
    client.subscribe(MQTT_TOPIC)

def on_message(client, userdata, msg):
    global temperature_data
    temperature = float(msg.payload.decode())
    timestamp = datetime.now().isoformat()
    
    # Add new temperature data to list
    temperature_data.append({"temperature": temperature, "timestamp": timestamp})
    
    # Keep only the latest ALARM_DURATION data points
    if len(temperature_data) > ALARM_DURATION:
        temperature_data.pop(0)
    
    # Check if temperature has been above threshold for the required duration
    if len(temperature_data) == ALARM_DURATION:
        if all(data['temperature'] > THRESHOLD for data in temperature_data):
            print("ALARM: Temperature has been above threshold for 5 minutes")
    
    # Save the latest temperature data to a file
    with open("temperature_data.json", "a") as file:
        json.dump(temperature_data[-1], file)
        file.write("\n")

# Create and configure MQTT client
client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message

# Connect to the MQTT broker
client.connect(MQTT_BROKER, MQTT_PORT, 60)
client.loop_forever()
